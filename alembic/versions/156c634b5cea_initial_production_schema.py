"""initial_production_schema

Revision ID: 156c634b5cea
Revises: 
Create Date: 2025-08-22 20:26:27.560691

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '156c634b5cea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('type', sa.Enum('LEARNING', 'SOCIAL', 'STREAK', 'MILESTONE', 'SPECIAL', name='achievementtype'), nullable=False),
    sa.Column('rarity', sa.Enum('COMMON', 'UNCOMMON', 'RARE', 'EPIC', 'LEGENDARY', name='achievementrarity'), nullable=False),
    sa.Column('xp_reward', sa.Integer(), nullable=False),
    sa.Column('criteria', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_achievements'))
    )
    op.create_index(op.f('ix_achievements_id'), 'achievements', ['id'], unique=False)
    op.create_index(op.f('ix_achievements_name'), 'achievements', ['name'], unique=True)
    op.create_index(op.f('ix_achievements_type'), 'achievements', ['type'], unique=False)
    op.create_table('ai_performance_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric_date', sa.DateTime(), nullable=True),
    sa.Column('total_interactions', sa.Integer(), nullable=True),
    sa.Column('successful_interactions', sa.Integer(), nullable=True),
    sa.Column('failed_interactions', sa.Integer(), nullable=True),
    sa.Column('average_response_time_ms', sa.Float(), nullable=True),
    sa.Column('gemma_usage_count', sa.Integer(), nullable=True),
    sa.Column('cloud_llm_usage_count', sa.Integer(), nullable=True),
    sa.Column('total_tokens_consumed', sa.Integer(), nullable=True),
    sa.Column('total_cost_usd', sa.Float(), nullable=True),
    sa.Column('user_satisfaction_score', sa.Float(), nullable=True, comment='Average user feedback score'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_performance_metrics'))
    )
    op.create_index(op.f('ix_ai_performance_metrics_id'), 'ai_performance_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_ai_performance_metrics_metric_date'), 'ai_performance_metrics', ['metric_date'], unique=False)
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('is_limited_time', sa.Boolean(), nullable=False),
    sa.Column('valid_from', sa.DateTime(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_badges'))
    )
    op.create_index(op.f('ix_badges_category'), 'badges', ['category'], unique=False)
    op.create_index(op.f('ix_badges_id'), 'badges', ['id'], unique=False)
    op.create_index(op.f('ix_badges_name'), 'badges', ['name'], unique=True)
    op.create_table('educational_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('publisher', sa.String(length=200), nullable=True),
    sa.Column('resource_type', sa.Enum('EBOOK', 'VIDEO', 'PODCAST', 'COURSE', 'ARTICLE', 'DOCUMENT', name='resourcetype'), nullable=False),
    sa.Column('provider', sa.Enum('YOUTUBE', 'KHAN_ACADEMY', 'MIT_OCW', 'COURSERA', 'EDX', 'INTERNET_ARCHIVE', 'PROJECT_GUTENBERG', 'OPEN_LIBRARY', 'GOOGLE_BOOKS', 'OPENSTAX', 'SPOTIFY', 'TED', 'VIMEO', 'LISTEN_NOTES', 'CUSTOM', name='resourceprovider'), nullable=False),
    sa.Column('subject_area', sa.String(length=100), nullable=True),
    sa.Column('difficulty_level', sa.String(length=50), nullable=True),
    sa.Column('external_id', sa.String(length=200), nullable=True),
    sa.Column('external_url', sa.String(length=1000), nullable=False),
    sa.Column('thumbnail_url', sa.String(length=1000), nullable=True),
    sa.Column('download_url', sa.String(length=1000), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('isbn', sa.String(length=20), nullable=True),
    sa.Column('quality_score', sa.Integer(), nullable=True),
    sa.Column('is_curated', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('raw_api_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_verified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_educational_resources'))
    )
    op.create_index(op.f('ix_educational_resources_external_id'), 'educational_resources', ['external_id'], unique=False)
    op.create_index(op.f('ix_educational_resources_id'), 'educational_resources', ['id'], unique=False)
    op.create_index(op.f('ix_educational_resources_provider'), 'educational_resources', ['provider'], unique=False)
    op.create_index(op.f('ix_educational_resources_resource_type'), 'educational_resources', ['resource_type'], unique=False)
    op.create_index(op.f('ix_educational_resources_subject_area'), 'educational_resources', ['subject_area'], unique=False)
    op.create_index(op.f('ix_educational_resources_title'), 'educational_resources', ['title'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions')),
    sa.UniqueConstraint('name', name=op.f('uq_permissions_name'))
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_table('resource_collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resource_collections'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('ai_conversation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('agent_type', sa.String(length=50), nullable=False, comment='Type of AI agent: mentor, sentiment, curriculum, etc.'),
    sa.Column('input_prompt', sa.Text(), nullable=False, comment='Input sent to AI model'),
    sa.Column('ai_response', sa.Text(), nullable=False, comment='Raw AI model response'),
    sa.Column('processed_response', sa.Text(), nullable=True, comment='Post-processed response sent to user'),
    sa.Column('model_used', sa.Enum('GEMMA_ON_DEVICE', 'CLOUD_LLM', 'HYBRID', name='aimodeltypeenum'), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=True, comment='Number of tokens consumed'),
    sa.Column('cost_estimate', sa.Float(), nullable=True, comment='Estimated cost in USD'),
    sa.Column('processing_time_ms', sa.Float(), nullable=False),
    sa.Column('error_occurred', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ai_conversation_logs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_conversation_logs'))
    )
    op.create_index(op.f('ix_ai_conversation_logs_id'), 'ai_conversation_logs', ['id'], unique=False)
    op.create_index(op.f('ix_ai_conversation_logs_session_id'), 'ai_conversation_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_ai_conversation_logs_timestamp'), 'ai_conversation_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_ai_conversation_logs_user_id'), 'ai_conversation_logs', ['user_id'], unique=False)
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('short_description', sa.String(length=500), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('difficulty_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='difficultylevel'), nullable=False),
    sa.Column('estimated_duration_hours', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('instructor_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['instructor_id'], ['users.id'], name=op.f('fk_courses_instructor_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_courses'))
    )
    op.create_index(op.f('ix_courses_category'), 'courses', ['category'], unique=False)
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_index(op.f('ix_courses_instructor_id'), 'courses', ['instructor_id'], unique=False)
    op.create_index(op.f('ix_courses_title'), 'courses', ['title'], unique=False)
    op.create_table('leaderboard_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('leaderboard_type', sa.String(length=50), nullable=False),
    sa.Column('scope', sa.String(length=50), nullable=False),
    sa.Column('scope_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(length=20), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=True),
    sa.Column('period_end', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_leaderboard_entries_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_leaderboard_entries')),
    sa.UniqueConstraint('user_id', 'leaderboard_type', 'scope', 'scope_id', 'period', name='uq_leaderboard_entry')
    )
    op.create_index(op.f('ix_leaderboard_entries_id'), 'leaderboard_entries', ['id'], unique=False)
    op.create_index(op.f('ix_leaderboard_entries_leaderboard_type'), 'leaderboard_entries', ['leaderboard_type'], unique=False)
    op.create_index(op.f('ix_leaderboard_entries_updated_at'), 'leaderboard_entries', ['updated_at'], unique=False)
    op.create_index(op.f('ix_leaderboard_entries_user_id'), 'leaderboard_entries', ['user_id'], unique=False)
    op.create_table('mentor_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=True, comment='Groups related interactions'),
    sa.Column('user_message', sa.Text(), nullable=True, comment="User's message to the mentor"),
    sa.Column('mentor_response', sa.Text(), nullable=False, comment="AI mentor's response"),
    sa.Column('interaction_type', sa.String(length=50), nullable=True, comment='Type: conversation, proactive_check_in, assistance'),
    sa.Column('model_used', sa.Enum('GEMMA_ON_DEVICE', 'CLOUD_LLM', 'HYBRID', name='aimodeltypeenum'), nullable=False, comment='Which AI model generated the response'),
    sa.Column('response_time_ms', sa.Float(), nullable=True, comment='Time taken to generate response in milliseconds'),
    sa.Column('sentiment_detected', sa.Float(), nullable=True, comment='Detected sentiment in user message'),
    sa.Column('context_metadata', sa.JSON(), nullable=True, comment='Additional context data'),
    sa.Column('was_helpful', sa.Boolean(), nullable=True, comment='User feedback on helpfulness'),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_mentor_interactions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mentor_interactions'))
    )
    op.create_index(op.f('ix_mentor_interactions_id'), 'mentor_interactions', ['id'], unique=False)
    op.create_index(op.f('ix_mentor_interactions_timestamp'), 'mentor_interactions', ['timestamp'], unique=False)
    op.create_index(op.f('ix_mentor_interactions_user_id'), 'mentor_interactions', ['user_id'], unique=False)
    op.create_table('resource_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('tag', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['educational_resources.id'], name=op.f('fk_resource_tags_resource_id_educational_resources')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resource_tags'))
    )
    op.create_index(op.f('ix_resource_tags_tag'), 'resource_tags', ['tag'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_role_permissions_permission_id_permissions')),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_role_permissions_role_id_roles')),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_permissions'))
    )
    op.create_table('streaks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('streak_type', sa.Enum('DAILY_LOGIN', 'LESSON_COMPLETION', 'STUDY_SESSION', 'COMMUNITY_ENGAGEMENT', name='streaktype'), nullable=False),
    sa.Column('current_count', sa.Integer(), nullable=False),
    sa.Column('longest_count', sa.Integer(), nullable=False),
    sa.Column('last_activity_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_streaks_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_streaks')),
    sa.UniqueConstraint('user_id', 'streak_type', name='uq_user_streak_type')
    )
    op.create_index(op.f('ix_streaks_id'), 'streaks', ['id'], unique=False)
    op.create_index(op.f('ix_streaks_last_activity_date'), 'streaks', ['last_activity_date'], unique=False)
    op.create_index(op.f('ix_streaks_streak_type'), 'streaks', ['streak_type'], unique=False)
    op.create_index(op.f('ix_streaks_user_id'), 'streaks', ['user_id'], unique=False)
    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('progress_data', sa.JSON(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], name=op.f('fk_user_achievements_achievement_id_achievements')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_achievements_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_achievements')),
    sa.UniqueConstraint('user_id', 'achievement_id', name='uq_user_achievement')
    )
    op.create_index(op.f('ix_user_achievements_achievement_id'), 'user_achievements', ['achievement_id'], unique=False)
    op.create_index(op.f('ix_user_achievements_completed_at'), 'user_achievements', ['completed_at'], unique=False)
    op.create_index(op.f('ix_user_achievements_id'), 'user_achievements', ['id'], unique=False)
    op.create_index(op.f('ix_user_achievements_user_id'), 'user_achievements', ['user_id'], unique=False)
    op.create_table('user_badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('is_equipped', sa.Boolean(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], name=op.f('fk_user_badges_badge_id_badges')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_badges_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_badges')),
    sa.UniqueConstraint('user_id', 'badge_id', name='uq_user_badge')
    )
    op.create_index(op.f('ix_user_badges_badge_id'), 'user_badges', ['badge_id'], unique=False)
    op.create_index(op.f('ix_user_badges_id'), 'user_badges', ['id'], unique=False)
    op.create_index(op.f('ix_user_badges_user_id'), 'user_badges', ['user_id'], unique=False)
    op.create_table('user_engagement_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('ENGAGED', 'STRUGGLING', 'BORED', 'CURIOUS', 'IDLE', 'FRUSTRATED', 'CONFIDENT', name='userengagementstateenum'), nullable=False),
    sa.Column('last_analyzed_at', sa.DateTime(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True, comment='Sentiment score from -1.0 (negative) to 1.0 (positive)'),
    sa.Column('confidence_score', sa.Float(), nullable=True, comment='AI confidence in the assessment (0.0 to 1.0)'),
    sa.Column('context', sa.String(length=500), nullable=True, comment="Context information e.g., 'lesson_id:5, quiz_id:12'"),
    sa.Column('activity_count', sa.Integer(), nullable=True, comment='Number of activities since last state change'),
    sa.Column('consecutive_struggles', sa.Integer(), nullable=True, comment='Number of consecutive struggling incidents'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_engagement_states_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_engagement_states'))
    )
    op.create_index(op.f('ix_user_engagement_states_id'), 'user_engagement_states', ['id'], unique=False)
    op.create_index(op.f('ix_user_engagement_states_user_id'), 'user_engagement_states', ['user_id'], unique=True)
    op.create_table('user_follows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('following_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name=op.f('fk_user_follows_follower_id_users')),
    sa.ForeignKeyConstraint(['following_id'], ['users.id'], name=op.f('fk_user_follows_following_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_follows'))
    )
    op.create_index(op.f('ix_user_follows_follower_id'), 'user_follows', ['follower_id'], unique=False)
    op.create_index(op.f('ix_user_follows_following_id'), 'user_follows', ['following_id'], unique=False)
    op.create_index(op.f('ix_user_follows_id'), 'user_follows', ['id'], unique=False)
    op.create_table('user_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_level', sa.Integer(), nullable=False),
    sa.Column('total_xp', sa.Integer(), nullable=False),
    sa.Column('xp_to_next_level', sa.Integer(), nullable=False),
    sa.Column('last_level_up', sa.DateTime(), nullable=True),
    sa.Column('levels_gained_today', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_levels_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_levels'))
    )
    op.create_index(op.f('ix_user_levels_id'), 'user_levels', ['id'], unique=False)
    op.create_index(op.f('ix_user_levels_user_id'), 'user_levels', ['user_id'], unique=True)
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_user_roles_role_id_roles')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_roles_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('pk_user_roles'))
    )
    op.create_table('user_xp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.Enum('LESSON_COMPLETED', 'COURSE_COMPLETED', 'POST_CREATED', 'COMMENT_CREATED', 'DAILY_LOGIN', 'STREAK_MILESTONE', 'STUDY_GROUP_JOINED', 'EVENT_ATTENDED', 'PROFILE_COMPLETED', 'FIRST_ACHIEVEMENT', name='xpactiontype'), nullable=False),
    sa.Column('xp_earned', sa.Integer(), nullable=False),
    sa.Column('context_type', sa.String(length=50), nullable=True),
    sa.Column('context_id', sa.Integer(), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('earned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_xp_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_xp'))
    )
    op.create_index(op.f('ix_user_xp_action_type'), 'user_xp', ['action_type'], unique=False)
    op.create_index(op.f('ix_user_xp_earned_at'), 'user_xp', ['earned_at'], unique=False)
    op.create_index(op.f('ix_user_xp_id'), 'user_xp', ['id'], unique=False)
    op.create_index(op.f('ix_user_xp_user_id'), 'user_xp', ['user_id'], unique=False)
    op.create_table('course_enrollments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('enrolled_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_course_enrollments_course_id_courses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_course_enrollments_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_enrollments'))
    )
    op.create_index(op.f('ix_course_enrollments_course_id'), 'course_enrollments', ['course_id'], unique=False)
    op.create_index(op.f('ix_course_enrollments_id'), 'course_enrollments', ['id'], unique=False)
    op.create_index(op.f('ix_course_enrollments_user_id'), 'course_enrollments', ['user_id'], unique=False)
    op.create_table('course_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('resource_order', sa.Integer(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_course_resources_course_id_courses')),
    sa.ForeignKeyConstraint(['resource_id'], ['educational_resources.id'], name=op.f('fk_course_resources_resource_id_educational_resources')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_resources'))
    )
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('content_type', sa.Enum('VIDEO', 'TEXT', 'INTERACTIVE', 'QUIZ', 'ASSIGNMENT', name='contenttype'), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('video_url', sa.String(length=500), nullable=True),
    sa.Column('resources_url', sa.String(length=500), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('is_preview', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_lessons_course_id_courses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_lessons'))
    )
    op.create_index(op.f('ix_lessons_course_id'), 'lessons', ['course_id'], unique=False)
    op.create_index(op.f('ix_lessons_id'), 'lessons', ['id'], unique=False)
    op.create_table('study_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('privacy', sa.Enum('PUBLIC', 'PRIVATE', 'INVITE_ONLY', name='studygroupprivacy'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'ARCHIVED', name='studygroupstatus'), nullable=False),
    sa.Column('max_members', sa.Integer(), nullable=True),
    sa.Column('requires_approval', sa.Boolean(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_study_groups_course_id_courses')),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name=op.f('fk_study_groups_creator_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_study_groups'))
    )
    op.create_index(op.f('ix_study_groups_course_id'), 'study_groups', ['course_id'], unique=False)
    op.create_index(op.f('ix_study_groups_creator_id'), 'study_groups', ['creator_id'], unique=False)
    op.create_index(op.f('ix_study_groups_id'), 'study_groups', ['id'], unique=False)
    op.create_index(op.f('ix_study_groups_name'), 'study_groups', ['name'], unique=False)
    op.create_table('community_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_type', sa.Enum('STUDY_SESSION', 'WORKSHOP', 'LECTURE', 'DISCUSSION', 'PROJECT_SHOWCASE', 'NETWORKING', 'OTHER', name='eventtype'), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'ONGOING', 'COMPLETED', 'CANCELLED', name='eventstatus'), nullable=False),
    sa.Column('location', sa.String(length=300), nullable=True),
    sa.Column('meeting_url', sa.String(length=500), nullable=True),
    sa.Column('max_attendees', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('study_group_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_community_events_course_id_courses')),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('fk_community_events_lesson_id_lessons')),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], name=op.f('fk_community_events_organizer_id_users')),
    sa.ForeignKeyConstraint(['study_group_id'], ['study_groups.id'], name=op.f('fk_community_events_study_group_id_study_groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_community_events'))
    )
    op.create_index(op.f('ix_community_events_course_id'), 'community_events', ['course_id'], unique=False)
    op.create_index(op.f('ix_community_events_id'), 'community_events', ['id'], unique=False)
    op.create_index(op.f('ix_community_events_lesson_id'), 'community_events', ['lesson_id'], unique=False)
    op.create_index(op.f('ix_community_events_organizer_id'), 'community_events', ['organizer_id'], unique=False)
    op.create_index(op.f('ix_community_events_start_time'), 'community_events', ['start_time'], unique=False)
    op.create_index(op.f('ix_community_events_study_group_id'), 'community_events', ['study_group_id'], unique=False)
    op.create_index(op.f('ix_community_events_title'), 'community_events', ['title'], unique=False)
    op.create_table('group_memberships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'MODERATOR', 'MEMBER', name='membershiprole'), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('study_group_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], name=op.f('fk_group_memberships_approved_by_id_users')),
    sa.ForeignKeyConstraint(['study_group_id'], ['study_groups.id'], name=op.f('fk_group_memberships_study_group_id_study_groups')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_group_memberships_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_group_memberships'))
    )
    op.create_index(op.f('ix_group_memberships_id'), 'group_memberships', ['id'], unique=False)
    op.create_index(op.f('ix_group_memberships_study_group_id'), 'group_memberships', ['study_group_id'], unique=False)
    op.create_index(op.f('ix_group_memberships_user_id'), 'group_memberships', ['user_id'], unique=False)
    op.create_table('lesson_completions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=False),
    sa.Column('time_spent_minutes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('fk_lesson_completions_lesson_id_lessons')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_lesson_completions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_lesson_completions'))
    )
    op.create_index(op.f('ix_lesson_completions_id'), 'lesson_completions', ['id'], unique=False)
    op.create_index(op.f('ix_lesson_completions_lesson_id'), 'lesson_completions', ['lesson_id'], unique=False)
    op.create_index(op.f('ix_lesson_completions_user_id'), 'lesson_completions', ['user_id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('post_type', sa.Enum('TEXT', 'IMAGE', 'VIDEO', 'LINK', 'ACHIEVEMENT', 'COURSE_PROGRESS', name='posttype'), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('video_url', sa.String(length=500), nullable=True),
    sa.Column('link_url', sa.String(length=500), nullable=True),
    sa.Column('link_title', sa.String(length=200), nullable=True),
    sa.Column('link_description', sa.String(length=500), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_posts_author_id_users')),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_posts_course_id_courses')),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('fk_posts_lesson_id_lessons')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_posts'))
    )
    op.create_index(op.f('ix_posts_author_id'), 'posts', ['author_id'], unique=False)
    op.create_index(op.f('ix_posts_created_at'), 'posts', ['created_at'], unique=False)
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_comments_author_id_users')),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.id'], name=op.f('fk_comments_parent_comment_id_comments')),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_comments_post_id_posts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments'))
    )
    op.create_index(op.f('ix_comments_author_id'), 'comments', ['author_id'], unique=False)
    op.create_index(op.f('ix_comments_created_at'), 'comments', ['created_at'], unique=False)
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_index(op.f('ix_comments_post_id'), 'comments', ['post_id'], unique=False)
    op.create_table('event_attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('GOING', 'MAYBE', 'NOT_GOING', 'ATTENDED', 'NO_SHOW', name='attendancestatus'), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.Column('attended_at', sa.DateTime(), nullable=True),
    sa.Column('feedback_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['community_events.id'], name=op.f('fk_event_attendances_event_id_community_events')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_event_attendances_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event_attendances'))
    )
    op.create_index(op.f('ix_event_attendances_event_id'), 'event_attendances', ['event_id'], unique=False)
    op.create_index(op.f('ix_event_attendances_id'), 'event_attendances', ['id'], unique=False)
    op.create_index(op.f('ix_event_attendances_user_id'), 'event_attendances', ['user_id'], unique=False)
    op.create_table('feed_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_feed_items_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_feed_items_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feed_items'))
    )
    op.create_index(op.f('ix_feed_items_created_at'), 'feed_items', ['created_at'], unique=False)
    op.create_index(op.f('ix_feed_items_id'), 'feed_items', ['id'], unique=False)
    op.create_index(op.f('ix_feed_items_post_id'), 'feed_items', ['post_id'], unique=False)
    op.create_index(op.f('ix_feed_items_user_id'), 'feed_items', ['user_id'], unique=False)
    op.create_table('post_reactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reaction_type', sa.Enum('LIKE', 'LOVE', 'LAUGH', 'CELEBRATE', 'SUPPORT', name='reactiontype'), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_post_reactions_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_post_reactions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_reactions'))
    )
    op.create_index(op.f('ix_post_reactions_id'), 'post_reactions', ['id'], unique=False)
    op.create_index(op.f('ix_post_reactions_post_id'), 'post_reactions', ['post_id'], unique=False)
    op.create_index(op.f('ix_post_reactions_user_id'), 'post_reactions', ['user_id'], unique=False)
    op.create_table('user_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('engagement_duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_user_interactions_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_interactions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_interactions'))
    )
    op.create_index(op.f('ix_user_interactions_created_at'), 'user_interactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_interactions_id'), 'user_interactions', ['id'], unique=False)
    op.create_index(op.f('ix_user_interactions_post_id'), 'user_interactions', ['post_id'], unique=False)
    op.create_index(op.f('ix_user_interactions_user_id'), 'user_interactions', ['user_id'], unique=False)
    op.create_table('comment_reactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reaction_type', sa.Enum('LIKE', 'LOVE', 'LAUGH', 'CELEBRATE', 'SUPPORT', name='reactiontype'), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], name=op.f('fk_comment_reactions_comment_id_comments')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_comment_reactions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comment_reactions'))
    )
    op.create_index(op.f('ix_comment_reactions_comment_id'), 'comment_reactions', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_reactions_id'), 'comment_reactions', ['id'], unique=False)
    op.create_index(op.f('ix_comment_reactions_user_id'), 'comment_reactions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comment_reactions_user_id'), table_name='comment_reactions')
    op.drop_index(op.f('ix_comment_reactions_id'), table_name='comment_reactions')
    op.drop_index(op.f('ix_comment_reactions_comment_id'), table_name='comment_reactions')
    op.drop_table('comment_reactions')
    op.drop_index(op.f('ix_user_interactions_user_id'), table_name='user_interactions')
    op.drop_index(op.f('ix_user_interactions_post_id'), table_name='user_interactions')
    op.drop_index(op.f('ix_user_interactions_id'), table_name='user_interactions')
    op.drop_index(op.f('ix_user_interactions_created_at'), table_name='user_interactions')
    op.drop_table('user_interactions')
    op.drop_index(op.f('ix_post_reactions_user_id'), table_name='post_reactions')
    op.drop_index(op.f('ix_post_reactions_post_id'), table_name='post_reactions')
    op.drop_index(op.f('ix_post_reactions_id'), table_name='post_reactions')
    op.drop_table('post_reactions')
    op.drop_index(op.f('ix_feed_items_user_id'), table_name='feed_items')
    op.drop_index(op.f('ix_feed_items_post_id'), table_name='feed_items')
    op.drop_index(op.f('ix_feed_items_id'), table_name='feed_items')
    op.drop_index(op.f('ix_feed_items_created_at'), table_name='feed_items')
    op.drop_table('feed_items')
    op.drop_index(op.f('ix_event_attendances_user_id'), table_name='event_attendances')
    op.drop_index(op.f('ix_event_attendances_id'), table_name='event_attendances')
    op.drop_index(op.f('ix_event_attendances_event_id'), table_name='event_attendances')
    op.drop_table('event_attendances')
    op.drop_index(op.f('ix_comments_post_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_created_at'), table_name='comments')
    op.drop_index(op.f('ix_comments_author_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_posts_id'), table_name='posts')
    op.drop_index(op.f('ix_posts_created_at'), table_name='posts')
    op.drop_index(op.f('ix_posts_author_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_lesson_completions_user_id'), table_name='lesson_completions')
    op.drop_index(op.f('ix_lesson_completions_lesson_id'), table_name='lesson_completions')
    op.drop_index(op.f('ix_lesson_completions_id'), table_name='lesson_completions')
    op.drop_table('lesson_completions')
    op.drop_index(op.f('ix_group_memberships_user_id'), table_name='group_memberships')
    op.drop_index(op.f('ix_group_memberships_study_group_id'), table_name='group_memberships')
    op.drop_index(op.f('ix_group_memberships_id'), table_name='group_memberships')
    op.drop_table('group_memberships')
    op.drop_index(op.f('ix_community_events_title'), table_name='community_events')
    op.drop_index(op.f('ix_community_events_study_group_id'), table_name='community_events')
    op.drop_index(op.f('ix_community_events_start_time'), table_name='community_events')
    op.drop_index(op.f('ix_community_events_organizer_id'), table_name='community_events')
    op.drop_index(op.f('ix_community_events_lesson_id'), table_name='community_events')
    op.drop_index(op.f('ix_community_events_id'), table_name='community_events')
    op.drop_index(op.f('ix_community_events_course_id'), table_name='community_events')
    op.drop_table('community_events')
    op.drop_index(op.f('ix_study_groups_name'), table_name='study_groups')
    op.drop_index(op.f('ix_study_groups_id'), table_name='study_groups')
    op.drop_index(op.f('ix_study_groups_creator_id'), table_name='study_groups')
    op.drop_index(op.f('ix_study_groups_course_id'), table_name='study_groups')
    op.drop_table('study_groups')
    op.drop_index(op.f('ix_lessons_id'), table_name='lessons')
    op.drop_index(op.f('ix_lessons_course_id'), table_name='lessons')
    op.drop_table('lessons')
    op.drop_table('course_resources')
    op.drop_index(op.f('ix_course_enrollments_user_id'), table_name='course_enrollments')
    op.drop_index(op.f('ix_course_enrollments_id'), table_name='course_enrollments')
    op.drop_index(op.f('ix_course_enrollments_course_id'), table_name='course_enrollments')
    op.drop_table('course_enrollments')
    op.drop_index(op.f('ix_user_xp_user_id'), table_name='user_xp')
    op.drop_index(op.f('ix_user_xp_id'), table_name='user_xp')
    op.drop_index(op.f('ix_user_xp_earned_at'), table_name='user_xp')
    op.drop_index(op.f('ix_user_xp_action_type'), table_name='user_xp')
    op.drop_table('user_xp')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_user_levels_user_id'), table_name='user_levels')
    op.drop_index(op.f('ix_user_levels_id'), table_name='user_levels')
    op.drop_table('user_levels')
    op.drop_index(op.f('ix_user_follows_id'), table_name='user_follows')
    op.drop_index(op.f('ix_user_follows_following_id'), table_name='user_follows')
    op.drop_index(op.f('ix_user_follows_follower_id'), table_name='user_follows')
    op.drop_table('user_follows')
    op.drop_index(op.f('ix_user_engagement_states_user_id'), table_name='user_engagement_states')
    op.drop_index(op.f('ix_user_engagement_states_id'), table_name='user_engagement_states')
    op.drop_table('user_engagement_states')
    op.drop_index(op.f('ix_user_badges_user_id'), table_name='user_badges')
    op.drop_index(op.f('ix_user_badges_id'), table_name='user_badges')
    op.drop_index(op.f('ix_user_badges_badge_id'), table_name='user_badges')
    op.drop_table('user_badges')
    op.drop_index(op.f('ix_user_achievements_user_id'), table_name='user_achievements')
    op.drop_index(op.f('ix_user_achievements_id'), table_name='user_achievements')
    op.drop_index(op.f('ix_user_achievements_completed_at'), table_name='user_achievements')
    op.drop_index(op.f('ix_user_achievements_achievement_id'), table_name='user_achievements')
    op.drop_table('user_achievements')
    op.drop_index(op.f('ix_streaks_user_id'), table_name='streaks')
    op.drop_index(op.f('ix_streaks_streak_type'), table_name='streaks')
    op.drop_index(op.f('ix_streaks_last_activity_date'), table_name='streaks')
    op.drop_index(op.f('ix_streaks_id'), table_name='streaks')
    op.drop_table('streaks')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_resource_tags_tag'), table_name='resource_tags')
    op.drop_table('resource_tags')
    op.drop_index(op.f('ix_mentor_interactions_user_id'), table_name='mentor_interactions')
    op.drop_index(op.f('ix_mentor_interactions_timestamp'), table_name='mentor_interactions')
    op.drop_index(op.f('ix_mentor_interactions_id'), table_name='mentor_interactions')
    op.drop_table('mentor_interactions')
    op.drop_index(op.f('ix_leaderboard_entries_user_id'), table_name='leaderboard_entries')
    op.drop_index(op.f('ix_leaderboard_entries_updated_at'), table_name='leaderboard_entries')
    op.drop_index(op.f('ix_leaderboard_entries_leaderboard_type'), table_name='leaderboard_entries')
    op.drop_index(op.f('ix_leaderboard_entries_id'), table_name='leaderboard_entries')
    op.drop_table('leaderboard_entries')
    op.drop_index(op.f('ix_courses_title'), table_name='courses')
    op.drop_index(op.f('ix_courses_instructor_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_category'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_ai_conversation_logs_user_id'), table_name='ai_conversation_logs')
    op.drop_index(op.f('ix_ai_conversation_logs_timestamp'), table_name='ai_conversation_logs')
    op.drop_index(op.f('ix_ai_conversation_logs_session_id'), table_name='ai_conversation_logs')
    op.drop_index(op.f('ix_ai_conversation_logs_id'), table_name='ai_conversation_logs')
    op.drop_table('ai_conversation_logs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('resource_collections')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_educational_resources_title'), table_name='educational_resources')
    op.drop_index(op.f('ix_educational_resources_subject_area'), table_name='educational_resources')
    op.drop_index(op.f('ix_educational_resources_resource_type'), table_name='educational_resources')
    op.drop_index(op.f('ix_educational_resources_provider'), table_name='educational_resources')
    op.drop_index(op.f('ix_educational_resources_id'), table_name='educational_resources')
    op.drop_index(op.f('ix_educational_resources_external_id'), table_name='educational_resources')
    op.drop_table('educational_resources')
    op.drop_index(op.f('ix_badges_name'), table_name='badges')
    op.drop_index(op.f('ix_badges_id'), table_name='badges')
    op.drop_index(op.f('ix_badges_category'), table_name='badges')
    op.drop_table('badges')
    op.drop_index(op.f('ix_ai_performance_metrics_metric_date'), table_name='ai_performance_metrics')
    op.drop_index(op.f('ix_ai_performance_metrics_id'), table_name='ai_performance_metrics')
    op.drop_table('ai_performance_metrics')
    op.drop_index(op.f('ix_achievements_type'), table_name='achievements')
    op.drop_index(op.f('ix_achievements_name'), table_name='achievements')
    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')
    op.drop_table('achievements')
    # ### end Alembic commands ###
