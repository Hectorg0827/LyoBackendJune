[pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts =
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --asyncio-mode=auto
    -v
    --cov=lyo_app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    auth: marks tests related to authentication
    learning: marks tests related to learning module
    feeds: marks tests related to feeds/social features
    database: marks tests that require database access
    redis: marks tests that require Redis
    ai: marks tests that require AI services
    async: marks tests that are async
    skip_ci: Skip in CI environment
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error
    error::UserWarning
    error::FutureWarning
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

[coverage:run]
source = lyo_app
omit =
    */tests/*
    */test_*
    */migrations/*
    */venv/*
    */__pycache__/*
    */.pytest_cache/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
