steps:
  # Build the container image for the specific GCR endpoint
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-f', 'Dockerfile.specific',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME:-lyo-backend}:latest',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME:-lyo-backend}:$BUILD_ID',
      '.'
    ]
  
  # Push the container image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME:-lyo-backend}:latest']
  
  - name: 'gcr.io/cloud-builders/docker'  
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME:-lyo-backend}:$BUILD_ID']

  # Deploy to the specific Cloud Run service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', '${_SERVICE_NAME:-lyo-backend}',
      '--image', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME:-lyo-backend}:latest',
      '--region', '${_REGION:-us-central1}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '2Gi',
      '--cpu', '2',
      '--min-instances', '1',
      '--max-instances', '10',
      '--timeout', '300',
      '--set-env-vars', 'ENVIRONMENT=production,ENABLE_SUPERIOR_AI_MODE=true,ENABLE_ADAPTIVE_DIFFICULTY=true,ENABLE_ADVANCED_SOCRATIC=true',
      '--update-labels', 'superior-ai=enabled,version=latest,deployment=gcr'
    ]

images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME:-lyo-backend}:latest'
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME:-lyo-backend}:$BUILD_ID'

substitutions:
  _SERVICE_NAME: 'lyo-backend'
  _REGION: 'us-central1'

options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'
  logging: CLOUD_LOGGING_ONLY
  
timeout: '1200s'
